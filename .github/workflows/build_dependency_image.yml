name: "Build Dependencies Image"
on:  # yamllint disable
  workflow_call:
    inputs:
      branch_base:
        description: "Base branch name"
        required: true
        type: string
  workflow_dispatch:  # yamllint disable-line rule:empty-values
    inputs:
      branch_base:
        description: "Base branch name"
        required: true
        type: string

jobs:
  container-build:
    runs-on: "ubuntu-20.04"
    strategy:
      fail-fast: true
      matrix:
        python-version: [ "3.7", "3.8", "3.9", "3.10" ]
        branch_base: "${{ github.event.inputs.branch_base }}"
    env:
      INVOKE_NAUTOBOT_PYTHON_VER: "${{ matrix.python-version }}"
    steps:
      - name: "Check out repository code"
        uses: "actions/checkout@v3"
        with:
          ref: "${{ matrix.branch_base }}"
      - name: "Set up QEMU"
        uses: "docker/setup-qemu-action@v1"
      - name: "Set up Docker Buildx"
        uses: "docker/setup-buildx-action@v1"
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: "Docker Dependenices Metadata"
        id: "dockerdepmeta"
        uses: "docker/metadata-action@v3"
        with:
          images: "ghcr.io/nautobot/nautobot-dependencies-dryrun" #TODO Change name
          flavor: |
            latest=false
          tags: |
            type=raw,value=${{ matrix.branch_base }}-py${{ matrix.python-version }}
            type=raw,value=${{ matrix.branch_base }}-{{sha}}-{{date 'X'}}-py${{ matrix.python-version }}
            type=raw,value=${{ matrix.branch_base }},enable=${{ matrix.python-version == 3.7 }}
            type=raw,value=${{ matrix.branch_base }}-{{sha}}-{{date 'X'}},enable=${{ matrix.python-version == 3.7 }}
          labels: |
            org.opencontainers.image.title=Nautobot Dependencies Base Image
      - name: "Build Dependencies Containers"
        uses: "docker/build-push-action@v2"
        with:
          push: false #TODO Change to true
          target: dependencies
          file: "docker/Dockerfile"
          platforms: "linux/amd64,linux/arm64"
          tags: "${{ steps.dockerdepmeta.outputs.tags }}"
          labels: "${{ steps.dockerdepmeta.outputs.labels }}"
          context: "."
          build-args: |
            PYTHON_VER=${{ matrix.python-version }}
            DEP_BASE_BRANCH=${{ matrix.branch_base }}